{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import{useParams,Link}from'react-router-dom';import{StudentContext}from'../context/StudentContext';import'../styles/PlayerRandomizer.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PlayerRandomizer=_ref=>{let{isEmbedded}=_ref;const{classId}=useParams();const{getStudentsByClass,classes}=useContext(StudentContext);const[students,setStudents]=useState([]);const[className,setClassName]=useState('');const[selectedStudent,setSelectedStudent]=useState(null);const[isAnimating,setIsAnimating]=useState(false);const[previouslySelected,setPreviouslySelected]=useState([]);useEffect(()=>{try{// Get students for this class\nconst classStudents=getStudentsByClass(classId)||[];setStudents(classStudents);// Find the class name\nconst classObj=classes.find(c=>c.id===parseInt(classId));if(classObj){setClassName(classObj.name);}else{setClassName('Class');// Default fallback\n}}catch(error){console.error(\"Error loading randomizer data:\",error);// Continue with empty data rather than crashing\nsetStudents([]);setClassName('Class');}},[classId,getStudentsByClass,classes]);const selectRandomStudent=()=>{if(students.length===0)return;// If all students have been selected, reset the list\nif(previouslySelected.length>=students.length){setPreviouslySelected([]);}// Filter out previously selected students\nconst availableStudents=students.filter(student=>!previouslySelected.includes(student.id));if(availableStudents.length===0)return;// Start the animation\nsetIsAnimating(true);setSelectedStudent(null);// Randomly cycle through students for visual effect\nlet counter=0;const maxCycles=20;const cycleInterval=setInterval(()=>{const randomIndex=Math.floor(Math.random()*students.length);setSelectedStudent(students[randomIndex]);counter++;if(counter>=maxCycles){clearInterval(cycleInterval);// Select the final student\nconst randomIndex=Math.floor(Math.random()*availableStudents.length);const finalStudent=availableStudents[randomIndex];setSelectedStudent(finalStudent);setPreviouslySelected([...previouslySelected,finalStudent.id]);setIsAnimating(false);}},100);};const resetSelection=()=>{setPreviouslySelected([]);setSelectedStudent(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"randomizer-container\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"randomizer-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-left\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"back-button\",children:\"\\u2190 Back\"}),/*#__PURE__*/_jsxs(\"h1\",{children:[className,\" Randomizer\"]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"randomizer-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:`student-display ${isAnimating?'animating':''} ${selectedStudent?'has-student':''}`,children:selectedStudent?/*#__PURE__*/_jsx(\"div\",{className:\"selected-student\",children:/*#__PURE__*/_jsx(\"div\",{className:\"student-name\",children:selectedStudent.name})}):/*#__PURE__*/_jsx(\"div\",{className:\"placeholder\",children:\"Click the button to select a random student\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"randomizer-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"randomize-button\",onClick:selectRandomStudent,disabled:isAnimating||students.length===0,children:isAnimating?'Selecting...':'Select Random Student'}),/*#__PURE__*/_jsx(\"button\",{className:\"reset-button\",onClick:resetSelection,disabled:!previouslySelected.length,children:\"Reset Selection History\"})]}),previouslySelected.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"selection-history\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Selection History\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"history-count\",children:[previouslySelected.length,\" of \",students.length,\" students selected\"]})]})]})]});};export default PlayerRandomizer;","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","Link","StudentContext","jsx","_jsx","jsxs","_jsxs","PlayerRandomizer","_ref","isEmbedded","classId","getStudentsByClass","classes","students","setStudents","className","setClassName","selectedStudent","setSelectedStudent","isAnimating","setIsAnimating","previouslySelected","setPreviouslySelected","classStudents","classObj","find","c","id","parseInt","name","error","console","selectRandomStudent","length","availableStudents","filter","student","includes","counter","maxCycles","cycleInterval","setInterval","randomIndex","Math","floor","random","clearInterval","finalStudent","resetSelection","children","to","onClick","disabled"],"sources":["/Users/ejohnson/Desktop/pflx-class-tools-new/src/components/PlayerRandomizer.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { StudentContext } from '../context/StudentContext';\nimport '../styles/PlayerRandomizer.css';\n\nconst PlayerRandomizer = ({ isEmbedded }) => {\n  const { classId } = useParams();\n  const { getStudentsByClass, classes } = useContext(StudentContext);\n  const [students, setStudents] = useState([]);\n  const [className, setClassName] = useState('');\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [previouslySelected, setPreviouslySelected] = useState([]);\n\n  useEffect(() => {\n    try {\n      // Get students for this class\n      const classStudents = getStudentsByClass(classId) || [];\n      setStudents(classStudents);\n      \n      // Find the class name\n      const classObj = classes.find(c => c.id === parseInt(classId));\n      if (classObj) {\n        setClassName(classObj.name);\n      } else {\n        setClassName('Class'); // Default fallback\n      }\n    } catch (error) {\n      console.error(\"Error loading randomizer data:\", error);\n      // Continue with empty data rather than crashing\n      setStudents([]);\n      setClassName('Class');\n    }\n  }, [classId, getStudentsByClass, classes]);\n\n  const selectRandomStudent = () => {\n    if (students.length === 0) return;\n    \n    // If all students have been selected, reset the list\n    if (previouslySelected.length >= students.length) {\n      setPreviouslySelected([]);\n    }\n    \n    // Filter out previously selected students\n    const availableStudents = students.filter(\n      student => !previouslySelected.includes(student.id)\n    );\n    \n    if (availableStudents.length === 0) return;\n    \n    // Start the animation\n    setIsAnimating(true);\n    setSelectedStudent(null);\n    \n    // Randomly cycle through students for visual effect\n    let counter = 0;\n    const maxCycles = 20;\n    const cycleInterval = setInterval(() => {\n      const randomIndex = Math.floor(Math.random() * students.length);\n      setSelectedStudent(students[randomIndex]);\n      \n      counter++;\n      if (counter >= maxCycles) {\n        clearInterval(cycleInterval);\n        \n        // Select the final student\n        const randomIndex = Math.floor(Math.random() * availableStudents.length);\n        const finalStudent = availableStudents[randomIndex];\n        setSelectedStudent(finalStudent);\n        setPreviouslySelected([...previouslySelected, finalStudent.id]);\n        setIsAnimating(false);\n      }\n    }, 100);\n  };\n\n  const resetSelection = () => {\n    setPreviouslySelected([]);\n    setSelectedStudent(null);\n  };\n\n  return (\n    <div className=\"randomizer-container\">\n      <header className=\"randomizer-header\">\n        <div className=\"header-left\">\n          <Link to=\"/\" className=\"back-button\">\n            ‚Üê Back\n          </Link>\n          <h1>{className} Randomizer</h1>\n        </div>\n      </header>\n      \n      <div className=\"randomizer-content\">\n        <div className={`student-display ${isAnimating ? 'animating' : ''} ${selectedStudent ? 'has-student' : ''}`}>\n          {selectedStudent ? (\n            <div className=\"selected-student\">\n              <div className=\"student-name\">{selectedStudent.name}</div>\n            </div>\n          ) : (\n            <div className=\"placeholder\">Click the button to select a random student</div>\n          )}\n        </div>\n        \n        <div className=\"randomizer-controls\">\n          <button \n            className=\"randomize-button\" \n            onClick={selectRandomStudent}\n            disabled={isAnimating || students.length === 0}\n          >\n            {isAnimating ? 'Selecting...' : 'Select Random Student'}\n          </button>\n          \n          <button \n            className=\"reset-button\" \n            onClick={resetSelection}\n            disabled={!previouslySelected.length}\n          >\n            Reset Selection History\n          </button>\n        </div>\n        \n        {previouslySelected.length > 0 && (\n          <div className=\"selection-history\">\n            <h3>Selection History</h3>\n            <div className=\"history-count\">\n              {previouslySelected.length} of {students.length} students selected\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerRandomizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}